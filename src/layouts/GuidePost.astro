---
import { DashboardTableOfContents } from '@/components/toc';
import { buttonVariants } from '@/components/ui/button';
import { getTableOfContents } from '@/lib/toc';
import { cn } from '@/lib/utils';
import { Icon } from 'astro-icon/components';
import type { CollectionEntry } from 'astro:content';
import DocsLayout from './DocsLayout.astro';

type Props = CollectionEntry<'guides'>;

const guide = Astro.props;
const slug = guide.slug;
const { title, description } = guide.data;
const toc = await getTableOfContents(guide.body);
---

<DocsLayout title={title} description={description}>
  <main class="container max-w-6xl py-6 lg:grid lg:grid-cols-[1fr_300px] lg:gap-10 lg:py-10 xl:gap-20">
    <article class="prose max-w-none dark:prose-invert">
      <h1 class="my-4 font-heading text-4xl" transition:name={'title-' + slug}>
        {title}
      </h1>
      <p class="text-muted-foreground" transition:name={'desc-' + slug}>
        {description}
      </p>
      <hr class="my-6" />

      <slot />

      <hr class="my-4 flex md:hidden" />
      <div class="flex justify-start py-6 md:hidden lg:py-10">
        <a href="/guides" class={cn(buttonVariants({ variant: 'ghost' }))}>
          <Icon name="chevron-left" class="mr-2 size-4" />
          See all guides
        </a>
      </div>
    </article>
    <div class="hidden text-sm lg:block">
      <div class="sticky top-18 -mt-10 max-h-[calc(var(--vh)-4rem)] overflow-y-auto pt-10" transition:animate="slide">
        <DashboardTableOfContents toc={toc} client:load />
      </div>
    </div>
  </main>
</DocsLayout>
